databaseChangeLog:
  - changeSet:
      id: 003-create-credential-with-audit
      author: Ã…sa Wegelius
      changes:
        # Main table
        - createTable:
            tableName: credential
            columns:
              - column:
                  name: credential_id
                  type: UUID
                  defaultValueComputed: gen_random_uuid()
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: credential_type
                  type: VARCHAR(32)
                  constraints:
                    nullable: false
              - column:
                  name: secret_value
                  type: TEXT
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  type: TIMESTAMPTZ
                  defaultValueComputed: now()
                  constraints:
                    nullable: false
              - column:
                  name: expires_at
                  type: TIMESTAMPTZ
              - column:
                  name: user_id
                  type: UUID
              - column:
                  name: client_id
                  type: UUID

        - addForeignKeyConstraint:
            constraintName: fk_credential_user
            baseTableName: credential
            baseColumnNames: user_id
            referencedTableName: "user"
            referencedColumnNames: user_id
            onDelete: CASCADE

        - addForeignKeyConstraint:
            constraintName: fk_credential_client
            baseTableName: credential
            baseColumnNames: client_id
            referencedTableName: system_client
            referencedColumnNames: client_id
            onDelete: CASCADE

        # Check constraint manually via SQL
        - sql:
            splitStatements: false
            stripComments: true
            sql: |
              ALTER TABLE credential
              ADD CONSTRAINT chk_user_or_client
              CHECK (
                (user_id IS NOT NULL AND client_id IS NULL) OR
                (user_id IS NULL AND client_id IS NOT NULL)
              );

        - createIndex:
            tableName: credential
            indexName: idx_credential_credential_id
            columns:
              - column:
                  name: credential_id

        - createIndex:
            tableName: credential
            indexName: idx_credential_user_id
            columns:
              - column:
                  name: user_id

        - createIndex:
            tableName: credential
            indexName: idx_credential_client_id
            columns:
              - column:
                  name: client_id

        # Audit table
        - createTable:
            tableName: credential_audit
            columns:
              - column:
                  name: audit_id
                  type: UUID
                  defaultValueComputed: gen_random_uuid()
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: credential_id
                  type: UUID
              - column:
                  name: credential_type
                  type: VARCHAR(32)
              - column:
                  name: secret_value
                  type: TEXT
              - column:
                  name: created_at
                  type: TIMESTAMPTZ
              - column:
                  name: expires_at
                  type: TIMESTAMPTZ
              - column:
                  name: user_id
                  type: UUID
              - column:
                  name: client_id
                  type: UUID
              - column:
                  name: operation_type
                  type: VARCHAR(16)
                  constraints:
                    nullable: false
              - column:
                  name: change_timestamp
                  type: TIMESTAMPTZ
                  defaultValueComputed: now()
                  constraints:
                    nullable: false
              - column:
                  name: actor_type
                  type: VARCHAR(16)
              - column:
                  name: actor_id
                  type: UUID

        - createIndex:
            tableName: credential_audit
            indexName: idx_credential_audit_credential_id
            columns:
              - column:
                  name: credential_id

        # Trigger function
        - sql:
            splitStatements: false
            stripComments: true
            sql: |
              CREATE OR REPLACE FUNCTION audit_credential_changes() RETURNS TRIGGER AS $$
              BEGIN
                INSERT INTO credential_audit (
                  credential_id,
                  credential_type,
                  secret_value,
                  created_at,
                  expires_at,
                  user_id,
                  client_id,
                  operation_type,
                  change_timestamp,
                  actor_type,
                  actor_id
                ) VALUES (
                  COALESCE(NEW.credential_id, OLD.credential_id),
                  COALESCE(NEW.credential_type, OLD.credential_type),
                  COALESCE(NEW.secret_value, OLD.secret_value),
                  COALESCE(NEW.created_at, OLD.created_at),
                  COALESCE(NEW.expires_at, OLD.expires_at),
                  COALESCE(NEW.user_id, OLD.user_id),
                  COALESCE(NEW.client_id, OLD.client_id),
                  TG_OP,
                  now(),
                  NULL,
                  NULL
                );
                RETURN NEW;
              END;
              $$ LANGUAGE plpgsql;

        # Trigger
        - sql:
            splitStatements: false
            stripComments: true
            sql: |
              CREATE TRIGGER trg_credential_audit
              AFTER INSERT OR UPDATE OR DELETE
              ON credential
              FOR EACH ROW
              EXECUTE FUNCTION audit_credential_changes();
